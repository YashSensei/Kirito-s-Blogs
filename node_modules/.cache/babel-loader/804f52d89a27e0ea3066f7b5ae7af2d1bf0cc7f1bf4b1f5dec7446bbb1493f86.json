{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yasha\\\\OneDrive\\\\Desktop\\\\bigones\\\\blogposts\\\\src\\\\pages\\\\BlogPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport ReactMarkdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { format } from 'date-fns';\nimport './BlogPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPost = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Sample blog post data\n  const samplePosts = {\n    1: {\n      id: 1,\n      title: \"Getting Started with React Development\",\n      content: `\n# Getting Started with React Development\n\nReact has revolutionized the way we build user interfaces. In this comprehensive guide, we'll explore the fundamentals of React and learn how to build your first interactive application.\n\n## What is React?\n\nReact is a JavaScript library for building user interfaces, particularly single-page applications. It's used for handling the view layer and can be used for developing both web and mobile applications.\n\n## Key Features\n\n- **Component-Based**: Everything in React is a component\n- **Virtual DOM**: Efficient rendering and updates\n- **JSX**: JavaScript XML for writing components\n- **Unidirectional Data Flow**: Predictable state management\n\n## Setting Up Your First React App\n\n\\`\\`\\`bash\nnpx create-react-app my-app\ncd my-app\nnpm start\n\\`\\`\\`\n\n## Creating Your First Component\n\n\\`\\`\\`jsx\nimport React from 'react';\n\nfunction Welcome() {\n  return (\n    <div>\n      <h1>Hello, React!</h1>\n      <p>Welcome to your first React component.</p>\n    </div>\n  );\n}\n\nexport default Welcome;\n\\`\\`\\`\n\n## State Management\n\nReact components can have state, which allows them to be interactive:\n\n\\`\\`\\`jsx\nimport React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>\n        Increment\n      </button>\n    </div>\n  );\n}\n\\`\\`\\`\n\n## Best Practices\n\n1. **Keep components small and focused**\n2. **Use meaningful names for props and state**\n3. **Implement proper error boundaries**\n4. **Optimize performance with React.memo**\n\n## Conclusion\n\nReact provides a powerful and flexible way to build modern web applications. With its component-based architecture and rich ecosystem, you can create complex applications with clean, maintainable code.\n\nStart building with React today and discover the endless possibilities!\n      `,\n      author: \"John Doe\",\n      date: new Date('2024-01-15'),\n      category: \"Development\",\n      readTime: \"5 min read\",\n      tags: [\"React\", \"JavaScript\", \"Frontend\"]\n    },\n    2: {\n      id: 2,\n      title: \"The Future of Web Development\",\n      content: `\n# The Future of Web Development\n\nThe web development landscape is constantly evolving, bringing new technologies and methodologies that shape how we build and deploy applications.\n\n## Emerging Trends\n\n### 1. WebAssembly (WASM)\nWebAssembly is revolutionizing web performance by allowing code written in languages like C++ and Rust to run in the browser at near-native speeds.\n\n### 2. Progressive Web Apps (PWAs)\nPWAs combine the best of web and mobile apps, offering offline functionality, push notifications, and app-like experiences.\n\n### 3. Serverless Architecture\nServerless computing is changing how we deploy and scale applications, reducing infrastructure management overhead.\n\n## Modern Development Tools\n\n- **Vite**: Lightning-fast build tool\n- **TypeScript**: Type-safe JavaScript\n- **Tailwind CSS**: Utility-first CSS framework\n- **Next.js**: Full-stack React framework\n\n## The Role of AI in Development\n\nArtificial Intelligence is becoming increasingly important in web development:\n\n- **Code Generation**: AI-powered code completion\n- **Testing**: Automated test generation\n- **Performance**: Intelligent optimization\n- **Accessibility**: Automated accessibility checks\n\n## Conclusion\n\nThe future of web development is exciting and full of possibilities. Stay updated with the latest trends and technologies to remain competitive in this ever-evolving field.\n      `,\n      author: \"Jane Smith\",\n      date: new Date('2024-01-10'),\n      category: \"Technology\",\n      readTime: \"8 min read\",\n      tags: [\"Web Development\", \"Trends\", \"UX\"]\n    },\n    3: {\n      id: 3,\n      title: \"Mastering CSS Grid and Flexbox\",\n      content: `\n# Mastering CSS Grid and Flexbox\n\nCSS Grid and Flexbox have changed the way we approach layouts in web development. These powerful layout systems provide unprecedented control over how elements are positioned and sized.\n\n## CSS Grid\n\nCSS Grid is a two-dimensional layout system that allows you to create complex layouts with rows and columns.\n\n### Basic Grid Setup\n\n\\`\\`\\`css\n.container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: auto;\n  gap: 20px;\n}\n\\`\\`\\`\n\n### Grid Areas\n\n\\`\\`\\`css\n.container {\n  display: grid;\n  grid-template-areas:\n    \"header header header\"\n    \"sidebar main main\"\n    \"footer footer footer\";\n}\n\n.header { grid-area: header; }\n.sidebar { grid-area: sidebar; }\n.main { grid-area: main; }\n.footer { grid-area: footer; }\n\\`\\`\\`\n\n## CSS Flexbox\n\nFlexbox is a one-dimensional layout method for arranging items in rows or columns.\n\n### Flex Container\n\n\\`\\`\\`css\n.flex-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\\`\\`\\`\n\n### Flex Items\n\n\\`\\`\\`css\n.flex-item {\n  flex: 1;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: auto;\n}\n\\`\\`\\`\n\n## When to Use Each\n\n- **Use Grid for**: Two-dimensional layouts, complex page structures\n- **Use Flexbox for**: One-dimensional layouts, component alignment\n\n## Best Practices\n\n1. Start with mobile-first design\n2. Use semantic HTML structure\n3. Test across different screen sizes\n4. Consider accessibility implications\n\n## Conclusion\n\nMastering CSS Grid and Flexbox will significantly improve your layout capabilities and create more responsive, maintainable designs.\n      `,\n      author: \"Mike Johnson\",\n      date: new Date('2024-01-05'),\n      category: \"Design\",\n      readTime: \"12 min read\",\n      tags: [\"CSS\", \"Grid\", \"Flexbox\", \"Layout\"]\n    }\n  };\n  useEffect(() => {\n    // Simulate API call\n    setTimeout(() => {\n      const foundPost = samplePosts[id];\n      setPost(foundPost);\n      setLoading(false);\n    }, 500);\n  }, [id, samplePosts]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"loading-container\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading post...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"error-container glass\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The post you're looking for doesn't exist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"back-link\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"blog-post-page\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 0.6\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"blog-post glass\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"post-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-category\",\n            children: post.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-date\",\n            children: format(post.date, 'MMM dd, yyyy')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"read-time\",\n            children: post.readTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-author\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"author-name\",\n            children: [\"By \", post.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-tags\",\n          children: post.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          components: {\n            code({\n              node,\n              inline,\n              className,\n              children,\n              ...props\n            }) {\n              const match = /language-(\\w+)/.exec(className || '');\n              return !inline && match ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n                style: tomorrow,\n                language: match[1],\n                PreTag: \"div\",\n                ...props,\n                children: String(children).replace(/\\n$/, '')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n                className: className,\n                ...props,\n                children: children\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this);\n            }\n          },\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"navigation-buttons\",\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 0.3\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"nav-button glass\",\n        children: \"\\u2190 Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogPost, \"taoQDP9sD2hseJdPcOb/ybygNeI=\", false, function () {\n  return [useParams];\n});\n_c = BlogPost;\nexport default BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","motion","ReactMarkdown","Prism","SyntaxHighlighter","tomorrow","format","jsxDEV","_jsxDEV","BlogPost","_s","id","post","setPost","loading","setLoading","samplePosts","title","content","author","date","Date","category","readTime","tags","setTimeout","foundPost","div","className","initial","opacity","animate","children","fileName","_jsxFileName","lineNumber","columnNumber","to","transition","duration","map","tag","components","code","node","inline","props","match","exec","style","language","PreTag","String","replace","y","delay","_c","$RefreshReg$"],"sources":["C:/Users/yasha/OneDrive/Desktop/bigones/blogposts/src/pages/BlogPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport { format } from 'date-fns';\r\nimport './BlogPost.css';\r\n\r\nconst BlogPost = () => {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Sample blog post data\r\n  const samplePosts = {\r\n    1: {\r\n      id: 1,\r\n      title: \"Getting Started with React Development\",\r\n      content: `\r\n# Getting Started with React Development\r\n\r\nReact has revolutionized the way we build user interfaces. In this comprehensive guide, we'll explore the fundamentals of React and learn how to build your first interactive application.\r\n\r\n## What is React?\r\n\r\nReact is a JavaScript library for building user interfaces, particularly single-page applications. It's used for handling the view layer and can be used for developing both web and mobile applications.\r\n\r\n## Key Features\r\n\r\n- **Component-Based**: Everything in React is a component\r\n- **Virtual DOM**: Efficient rendering and updates\r\n- **JSX**: JavaScript XML for writing components\r\n- **Unidirectional Data Flow**: Predictable state management\r\n\r\n## Setting Up Your First React App\r\n\r\n\\`\\`\\`bash\r\nnpx create-react-app my-app\r\ncd my-app\r\nnpm start\r\n\\`\\`\\`\r\n\r\n## Creating Your First Component\r\n\r\n\\`\\`\\`jsx\r\nimport React from 'react';\r\n\r\nfunction Welcome() {\r\n  return (\r\n    <div>\r\n      <h1>Hello, React!</h1>\r\n      <p>Welcome to your first React component.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Welcome;\r\n\\`\\`\\`\r\n\r\n## State Management\r\n\r\nReact components can have state, which allows them to be interactive:\r\n\r\n\\`\\`\\`jsx\r\nimport React, { useState } from 'react';\r\n\r\nfunction Counter() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <p>Count: {count}</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Increment\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\\`\\`\\`\r\n\r\n## Best Practices\r\n\r\n1. **Keep components small and focused**\r\n2. **Use meaningful names for props and state**\r\n3. **Implement proper error boundaries**\r\n4. **Optimize performance with React.memo**\r\n\r\n## Conclusion\r\n\r\nReact provides a powerful and flexible way to build modern web applications. With its component-based architecture and rich ecosystem, you can create complex applications with clean, maintainable code.\r\n\r\nStart building with React today and discover the endless possibilities!\r\n      `,\r\n      author: \"John Doe\",\r\n      date: new Date('2024-01-15'),\r\n      category: \"Development\",\r\n      readTime: \"5 min read\",\r\n      tags: [\"React\", \"JavaScript\", \"Frontend\"]\r\n    },\r\n    2: {\r\n      id: 2,\r\n      title: \"The Future of Web Development\",\r\n      content: `\r\n# The Future of Web Development\r\n\r\nThe web development landscape is constantly evolving, bringing new technologies and methodologies that shape how we build and deploy applications.\r\n\r\n## Emerging Trends\r\n\r\n### 1. WebAssembly (WASM)\r\nWebAssembly is revolutionizing web performance by allowing code written in languages like C++ and Rust to run in the browser at near-native speeds.\r\n\r\n### 2. Progressive Web Apps (PWAs)\r\nPWAs combine the best of web and mobile apps, offering offline functionality, push notifications, and app-like experiences.\r\n\r\n### 3. Serverless Architecture\r\nServerless computing is changing how we deploy and scale applications, reducing infrastructure management overhead.\r\n\r\n## Modern Development Tools\r\n\r\n- **Vite**: Lightning-fast build tool\r\n- **TypeScript**: Type-safe JavaScript\r\n- **Tailwind CSS**: Utility-first CSS framework\r\n- **Next.js**: Full-stack React framework\r\n\r\n## The Role of AI in Development\r\n\r\nArtificial Intelligence is becoming increasingly important in web development:\r\n\r\n- **Code Generation**: AI-powered code completion\r\n- **Testing**: Automated test generation\r\n- **Performance**: Intelligent optimization\r\n- **Accessibility**: Automated accessibility checks\r\n\r\n## Conclusion\r\n\r\nThe future of web development is exciting and full of possibilities. Stay updated with the latest trends and technologies to remain competitive in this ever-evolving field.\r\n      `,\r\n      author: \"Jane Smith\",\r\n      date: new Date('2024-01-10'),\r\n      category: \"Technology\",\r\n      readTime: \"8 min read\",\r\n      tags: [\"Web Development\", \"Trends\", \"UX\"]\r\n    },\r\n    3: {\r\n      id: 3,\r\n      title: \"Mastering CSS Grid and Flexbox\",\r\n      content: `\r\n# Mastering CSS Grid and Flexbox\r\n\r\nCSS Grid and Flexbox have changed the way we approach layouts in web development. These powerful layout systems provide unprecedented control over how elements are positioned and sized.\r\n\r\n## CSS Grid\r\n\r\nCSS Grid is a two-dimensional layout system that allows you to create complex layouts with rows and columns.\r\n\r\n### Basic Grid Setup\r\n\r\n\\`\\`\\`css\r\n.container {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: auto;\r\n  gap: 20px;\r\n}\r\n\\`\\`\\`\r\n\r\n### Grid Areas\r\n\r\n\\`\\`\\`css\r\n.container {\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"header header header\"\r\n    \"sidebar main main\"\r\n    \"footer footer footer\";\r\n}\r\n\r\n.header { grid-area: header; }\r\n.sidebar { grid-area: sidebar; }\r\n.main { grid-area: main; }\r\n.footer { grid-area: footer; }\r\n\\`\\`\\`\r\n\r\n## CSS Flexbox\r\n\r\nFlexbox is a one-dimensional layout method for arranging items in rows or columns.\r\n\r\n### Flex Container\r\n\r\n\\`\\`\\`css\r\n.flex-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n}\r\n\\`\\`\\`\r\n\r\n### Flex Items\r\n\r\n\\`\\`\\`css\r\n.flex-item {\r\n  flex: 1;\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n  flex-basis: auto;\r\n}\r\n\\`\\`\\`\r\n\r\n## When to Use Each\r\n\r\n- **Use Grid for**: Two-dimensional layouts, complex page structures\r\n- **Use Flexbox for**: One-dimensional layouts, component alignment\r\n\r\n## Best Practices\r\n\r\n1. Start with mobile-first design\r\n2. Use semantic HTML structure\r\n3. Test across different screen sizes\r\n4. Consider accessibility implications\r\n\r\n## Conclusion\r\n\r\nMastering CSS Grid and Flexbox will significantly improve your layout capabilities and create more responsive, maintainable designs.\r\n      `,\r\n      author: \"Mike Johnson\",\r\n      date: new Date('2024-01-05'),\r\n      category: \"Design\",\r\n      readTime: \"12 min read\",\r\n      tags: [\"CSS\", \"Grid\", \"Flexbox\", \"Layout\"]\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      const foundPost = samplePosts[id];\r\n      setPost(foundPost);\r\n      setLoading(false);\r\n    }, 500);\r\n  }, [id, samplePosts]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <motion.div\r\n        className=\"loading-container\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n      >\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading post...</p>\r\n      </motion.div>\r\n    );\r\n  }\r\n\r\n  if (!post) {\r\n    return (\r\n      <motion.div\r\n        className=\"error-container glass\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n      >\r\n        <h2>Post not found</h2>\r\n        <p>The post you're looking for doesn't exist.</p>\r\n        <Link to=\"/\" className=\"back-link\">Back to Home</Link>\r\n      </motion.div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"blog-post-page\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.6 }}\r\n    >\r\n      <article className=\"blog-post glass\">\r\n        <header className=\"post-header\">\r\n          <div className=\"post-meta\">\r\n            <span className=\"post-category\">{post.category}</span>\r\n            <span className=\"post-date\">{format(post.date, 'MMM dd, yyyy')}</span>\r\n            <span className=\"read-time\">{post.readTime}</span>\r\n          </div>\r\n          <h1 className=\"post-title\">{post.title}</h1>\r\n          <div className=\"post-author\">\r\n            <span className=\"author-name\">By {post.author}</span>\r\n          </div>\r\n          <div className=\"post-tags\">\r\n            {post.tags.map(tag => (\r\n              <span key={tag} className=\"tag\">{tag}</span>\r\n            ))}\r\n          </div>\r\n        </header>\r\n\r\n        <div className=\"post-content\">\r\n          <ReactMarkdown\r\n            components={{\r\n              code({ node, inline, className, children, ...props }) {\r\n                const match = /language-(\\w+)/.exec(className || '');\r\n                return !inline && match ? (\r\n                  <SyntaxHighlighter\r\n                    style={tomorrow}\r\n                    language={match[1]}\r\n                    PreTag=\"div\"\r\n                    {...props}\r\n                  >\r\n                    {String(children).replace(/\\n$/, '')}\r\n                  </SyntaxHighlighter>\r\n                ) : (\r\n                  <code className={className} {...props}>\r\n                    {children}\r\n                  </code>\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            {post.content}\r\n          </ReactMarkdown>\r\n        </div>\r\n      </article>\r\n\r\n      <motion.div\r\n        className=\"navigation-buttons\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.3 }}\r\n      >\r\n        <Link to=\"/\" className=\"nav-button glass\">\r\n          ← Back to Home\r\n        </Link>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default BlogPost; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SAASC,KAAK,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE,SAASC,QAAQ,QAAQ,gDAAgD;AACzE,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMmB,WAAW,GAAG;IAClB,CAAC,EAAE;MACDL,EAAE,EAAE,CAAC;MACLM,KAAK,EAAE,wCAAwC;MAC/CC,OAAO,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;MACDC,MAAM,EAAE,UAAU;MAClBC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY,CAAC;MAC5BC,QAAQ,EAAE,aAAa;MACvBC,QAAQ,EAAE,YAAY;MACtBC,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU;IAC1C,CAAC;IACD,CAAC,EAAE;MACDb,EAAE,EAAE,CAAC;MACLM,KAAK,EAAE,+BAA+B;MACtCC,OAAO,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;MACDC,MAAM,EAAE,YAAY;MACpBC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY,CAAC;MAC5BC,QAAQ,EAAE,YAAY;MACtBC,QAAQ,EAAE,YAAY;MACtBC,IAAI,EAAE,CAAC,iBAAiB,EAAE,QAAQ,EAAE,IAAI;IAC1C,CAAC;IACD,CAAC,EAAE;MACDb,EAAE,EAAE,CAAC;MACLM,KAAK,EAAE,gCAAgC;MACvCC,OAAO,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;MACDC,MAAM,EAAE,cAAc;MACtBC,IAAI,EAAE,IAAIC,IAAI,CAAC,YAAY,CAAC;MAC5BC,QAAQ,EAAE,QAAQ;MAClBC,QAAQ,EAAE,aAAa;MACvBC,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ;IAC3C;EACF,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd;IACA2B,UAAU,CAAC,MAAM;MACf,MAAMC,SAAS,GAAGV,WAAW,CAACL,EAAE,CAAC;MACjCE,OAAO,CAACa,SAAS,CAAC;MAClBX,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,GA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}